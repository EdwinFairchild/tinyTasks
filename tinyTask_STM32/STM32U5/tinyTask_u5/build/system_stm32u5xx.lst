ARM GAS  /tmp/cc8Ho2JW.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"system_stm32u5xx.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	1
  22              		.global	SystemInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB345:
  29              		.file 1 "Core/Src/system_stm32u5xx.c"
   1:Core/Src/system_stm32u5xx.c **** /**
   2:Core/Src/system_stm32u5xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32u5xx.c ****   * @file    system_stm32u5xx.c
   4:Core/Src/system_stm32u5xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32u5xx.c ****   * @brief   CMSIS Cortex-M33 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32u5xx.c ****   *
   7:Core/Src/system_stm32u5xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32u5xx.c ****   *   user application:
   9:Core/Src/system_stm32u5xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32u5xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32u5xx.c ****   *                      the "startup_stm32u5xx.s" file.
  12:Core/Src/system_stm32u5xx.c ****   *
  13:Core/Src/system_stm32u5xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32u5xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32u5xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32u5xx.c ****   *
  17:Core/Src/system_stm32u5xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32u5xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32u5xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32u5xx.c ****   *
  21:Core/Src/system_stm32u5xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32u5xx.c ****   *   Then SystemInit() function is called, in "startup_stm32u5xx.s" file, to
  23:Core/Src/system_stm32u5xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32u5xx.c ****   *
  25:Core/Src/system_stm32u5xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32u5xx.c ****   *=============================================================================
  27:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32u5xx.c ****   *        System Clock source                     | MSI
  29:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  /tmp/cc8Ho2JW.s 			page 2


  30:Core/Src/system_stm32u5xx.c ****   *        SYSCLK(Hz)                              | 4000000
  31:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32u5xx.c ****   *        HCLK(Hz)                                | 4000000
  33:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32u5xx.c ****   *        AHB Prescaler                           | 1
  35:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32u5xx.c ****   *        APB1 Prescaler                          | 1
  37:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32u5xx.c ****   *        APB2 Prescaler                          | 1
  39:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32u5xx.c ****   *        APB3 Prescaler                          | 1
  41:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32u5xx.c ****   *        PLL1_SRC                                | No clock
  43:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32u5xx.c ****   *        PLL1_M                                  | 1
  45:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32u5xx.c ****   *        PLL1_N                                  | 8
  47:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32u5xx.c ****   *        PLL1_P                                  | 7
  49:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32u5xx.c ****   *        PLL1_Q                                  | 2
  51:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32u5xx.c ****   *        PLL1_R                                  | 2
  53:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32u5xx.c ****   *        PLL2_SRC                                | NA
  55:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32u5xx.c ****   *        PLL2_M                                  | NA
  57:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32u5xx.c ****   *        PLL2_N                                  | NA
  59:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32u5xx.c ****   *        PLL2_P                                  | NA
  61:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32u5xx.c ****   *        PLL2_Q                                  | NA
  63:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  64:Core/Src/system_stm32u5xx.c ****   *        PLL2_R                                  | NA
  65:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  66:Core/Src/system_stm32u5xx.c ****   *        PLL3_SRC                                | NA
  67:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  68:Core/Src/system_stm32u5xx.c ****   *        PLL3_M                                  | NA
  69:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  70:Core/Src/system_stm32u5xx.c ****   *        PLL3_N                                  | NA
  71:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  72:Core/Src/system_stm32u5xx.c ****   *        PLL3_P                                  | NA
  73:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  74:Core/Src/system_stm32u5xx.c ****   *        Require 48MHz for USB FS,               | Disabled
  75:Core/Src/system_stm32u5xx.c ****   *        SDIO and RNG clock                      |
  76:Core/Src/system_stm32u5xx.c ****   *-----------------------------------------------------------------------------
  77:Core/Src/system_stm32u5xx.c ****   *=============================================================================
  78:Core/Src/system_stm32u5xx.c ****   ******************************************************************************
  79:Core/Src/system_stm32u5xx.c ****   * @attention
  80:Core/Src/system_stm32u5xx.c ****   *
  81:Core/Src/system_stm32u5xx.c ****   * Copyright (c) 2021 STMicroelectronics.
  82:Core/Src/system_stm32u5xx.c ****   * All rights reserved.
  83:Core/Src/system_stm32u5xx.c ****   *
  84:Core/Src/system_stm32u5xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  85:Core/Src/system_stm32u5xx.c ****   * in the root directory of this software component.
  86:Core/Src/system_stm32u5xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
ARM GAS  /tmp/cc8Ho2JW.s 			page 3


  87:Core/Src/system_stm32u5xx.c ****   *
  88:Core/Src/system_stm32u5xx.c ****   ******************************************************************************
  89:Core/Src/system_stm32u5xx.c ****   */
  90:Core/Src/system_stm32u5xx.c **** 
  91:Core/Src/system_stm32u5xx.c **** /** @addtogroup CMSIS
  92:Core/Src/system_stm32u5xx.c ****   * @{
  93:Core/Src/system_stm32u5xx.c ****   */
  94:Core/Src/system_stm32u5xx.c **** 
  95:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_system
  96:Core/Src/system_stm32u5xx.c ****   * @{
  97:Core/Src/system_stm32u5xx.c ****   */
  98:Core/Src/system_stm32u5xx.c **** 
  99:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_Includes
 100:Core/Src/system_stm32u5xx.c ****   * @{
 101:Core/Src/system_stm32u5xx.c ****   */
 102:Core/Src/system_stm32u5xx.c **** 
 103:Core/Src/system_stm32u5xx.c **** #include "stm32u5xx.h"
 104:Core/Src/system_stm32u5xx.c **** #include <math.h>
 105:Core/Src/system_stm32u5xx.c **** 
 106:Core/Src/system_stm32u5xx.c **** /**
 107:Core/Src/system_stm32u5xx.c ****   * @}
 108:Core/Src/system_stm32u5xx.c ****   */
 109:Core/Src/system_stm32u5xx.c **** 
 110:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_TypesDefinitions
 111:Core/Src/system_stm32u5xx.c ****   * @{
 112:Core/Src/system_stm32u5xx.c ****   */
 113:Core/Src/system_stm32u5xx.c **** 
 114:Core/Src/system_stm32u5xx.c **** /**
 115:Core/Src/system_stm32u5xx.c ****   * @}
 116:Core/Src/system_stm32u5xx.c ****   */
 117:Core/Src/system_stm32u5xx.c **** 
 118:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_Defines
 119:Core/Src/system_stm32u5xx.c ****   * @{
 120:Core/Src/system_stm32u5xx.c ****   */
 121:Core/Src/system_stm32u5xx.c **** 
 122:Core/Src/system_stm32u5xx.c **** #if !defined  (HSE_VALUE)
 123:Core/Src/system_stm32u5xx.c ****   #define HSE_VALUE    16000000U /*!< Value of the External oscillator in Hz */
 124:Core/Src/system_stm32u5xx.c **** #endif /* HSE_VALUE */
 125:Core/Src/system_stm32u5xx.c **** 
 126:Core/Src/system_stm32u5xx.c **** #if !defined  (MSI_VALUE)
 127:Core/Src/system_stm32u5xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 128:Core/Src/system_stm32u5xx.c **** #endif /* MSI_VALUE */
 129:Core/Src/system_stm32u5xx.c **** 
 130:Core/Src/system_stm32u5xx.c **** #if !defined  (HSI_VALUE)
 131:Core/Src/system_stm32u5xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 132:Core/Src/system_stm32u5xx.c **** #endif /* HSI_VALUE */
 133:Core/Src/system_stm32u5xx.c **** 
 134:Core/Src/system_stm32u5xx.c **** /************************* Miscellaneous Configuration ************************/
 135:Core/Src/system_stm32u5xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 136:Core/Src/system_stm32u5xx.c ****      Internal SRAM. */
 137:Core/Src/system_stm32u5xx.c **** /* #define VECT_TAB_SRAM */
 138:Core/Src/system_stm32u5xx.c **** #define VECT_TAB_OFFSET  0x00000000UL /*!< Vector Table base offset field.
 139:Core/Src/system_stm32u5xx.c ****                                    This value must be a multiple of 0x200. */
 140:Core/Src/system_stm32u5xx.c **** /******************************************************************************/
 141:Core/Src/system_stm32u5xx.c **** 
 142:Core/Src/system_stm32u5xx.c **** /**
 143:Core/Src/system_stm32u5xx.c ****   * @}
ARM GAS  /tmp/cc8Ho2JW.s 			page 4


 144:Core/Src/system_stm32u5xx.c ****   */
 145:Core/Src/system_stm32u5xx.c **** 
 146:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_Macros
 147:Core/Src/system_stm32u5xx.c ****   * @{
 148:Core/Src/system_stm32u5xx.c ****   */
 149:Core/Src/system_stm32u5xx.c **** 
 150:Core/Src/system_stm32u5xx.c **** /**
 151:Core/Src/system_stm32u5xx.c ****   * @}
 152:Core/Src/system_stm32u5xx.c ****   */
 153:Core/Src/system_stm32u5xx.c **** 
 154:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_Variables
 155:Core/Src/system_stm32u5xx.c ****   * @{
 156:Core/Src/system_stm32u5xx.c ****   */
 157:Core/Src/system_stm32u5xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 158:Core/Src/system_stm32u5xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 159:Core/Src/system_stm32u5xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 160:Core/Src/system_stm32u5xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 161:Core/Src/system_stm32u5xx.c ****          Note: If you use this function to configure the system clock; then there
 162:Core/Src/system_stm32u5xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 163:Core/Src/system_stm32u5xx.c ****                variable is updated automatically.
 164:Core/Src/system_stm32u5xx.c ****   */
 165:Core/Src/system_stm32u5xx.c ****   uint32_t SystemCoreClock = 4000000U;
 166:Core/Src/system_stm32u5xx.c **** 
 167:Core/Src/system_stm32u5xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 168:Core/Src/system_stm32u5xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 169:Core/Src/system_stm32u5xx.c ****   const uint32_t MSIRangeTable[16] = {48000000U,24000000U,16000000U,12000000U, 4000000U, 2000000U, 
 170:Core/Src/system_stm32u5xx.c ****                                       1000000U, 3072000U, 1536000U,1024000U, 768000U, 400000U, 2000
 171:Core/Src/system_stm32u5xx.c **** /**
 172:Core/Src/system_stm32u5xx.c ****   * @}
 173:Core/Src/system_stm32u5xx.c ****   */
 174:Core/Src/system_stm32u5xx.c **** 
 175:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_FunctionPrototypes
 176:Core/Src/system_stm32u5xx.c ****   * @{
 177:Core/Src/system_stm32u5xx.c ****   */
 178:Core/Src/system_stm32u5xx.c **** 
 179:Core/Src/system_stm32u5xx.c **** /**
 180:Core/Src/system_stm32u5xx.c ****   * @}
 181:Core/Src/system_stm32u5xx.c ****   */
 182:Core/Src/system_stm32u5xx.c **** 
 183:Core/Src/system_stm32u5xx.c **** /** @addtogroup STM32U5xx_System_Private_Functions
 184:Core/Src/system_stm32u5xx.c ****   * @{
 185:Core/Src/system_stm32u5xx.c ****   */
 186:Core/Src/system_stm32u5xx.c **** 
 187:Core/Src/system_stm32u5xx.c **** /**
 188:Core/Src/system_stm32u5xx.c ****   * @brief  Setup the microcontroller system.
 189:Core/Src/system_stm32u5xx.c ****   * @param  None
 190:Core/Src/system_stm32u5xx.c ****   * @retval None
 191:Core/Src/system_stm32u5xx.c ****   */
 192:Core/Src/system_stm32u5xx.c **** 
 193:Core/Src/system_stm32u5xx.c **** void SystemInit(void)
 194:Core/Src/system_stm32u5xx.c **** {
  30              		.loc 1 194 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 195:Core/Src/system_stm32u5xx.c ****   /* FPU settings ------------------------------------------------------------*/
ARM GAS  /tmp/cc8Ho2JW.s 			page 5


 196:Core/Src/system_stm32u5xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 197:Core/Src/system_stm32u5xx.c ****    SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  35              		.loc 1 197 4 view .LVU1
  36              		.loc 1 197 15 is_stmt 0 view .LVU2
  37 0000 0E48     		ldr	r0, .L2
  38 0002 D0F88830 		ldr	r3, [r0, #136]
  39 0006 43F47003 		orr	r3, r3, #15728640
  40 000a C0F88830 		str	r3, [r0, #136]
 198:Core/Src/system_stm32u5xx.c ****   #endif
 199:Core/Src/system_stm32u5xx.c **** 
 200:Core/Src/system_stm32u5xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 201:Core/Src/system_stm32u5xx.c ****   /* Set MSION bit */
 202:Core/Src/system_stm32u5xx.c ****   RCC->CR = RCC_CR_MSISON;
  41              		.loc 1 202 3 is_stmt 1 view .LVU3
  42              		.loc 1 202 11 is_stmt 0 view .LVU4
  43 000e 0C4B     		ldr	r3, .L2+4
  44 0010 0122     		movs	r2, #1
  45 0012 1A60     		str	r2, [r3]
 203:Core/Src/system_stm32u5xx.c **** 
 204:Core/Src/system_stm32u5xx.c ****   /* Reset CFGR register */
 205:Core/Src/system_stm32u5xx.c ****   RCC->CFGR1 = 0U;
  46              		.loc 1 205 3 is_stmt 1 view .LVU5
  47              		.loc 1 205 14 is_stmt 0 view .LVU6
  48 0014 0022     		movs	r2, #0
  49 0016 DA61     		str	r2, [r3, #28]
 206:Core/Src/system_stm32u5xx.c ****   RCC->CFGR2 = 0U;
  50              		.loc 1 206 3 is_stmt 1 view .LVU7
  51              		.loc 1 206 14 is_stmt 0 view .LVU8
  52 0018 1A62     		str	r2, [r3, #32]
 207:Core/Src/system_stm32u5xx.c ****   RCC->CFGR3 = 0U;
  53              		.loc 1 207 3 is_stmt 1 view .LVU9
  54              		.loc 1 207 14 is_stmt 0 view .LVU10
  55 001a 5A62     		str	r2, [r3, #36]
 208:Core/Src/system_stm32u5xx.c **** 
 209:Core/Src/system_stm32u5xx.c ****   /* Reset HSEON, CSSON , HSION, PLLxON bits */
 210:Core/Src/system_stm32u5xx.c ****   RCC->CR &= ~(RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLL1ON | RCC_CR_PLL2ON | RCC_CR_PLL3ON);
  56              		.loc 1 210 3 is_stmt 1 view .LVU11
  57              		.loc 1 210 11 is_stmt 0 view .LVU12
  58 001c 1968     		ldr	r1, [r3]
  59 001e 21F0A851 		bic	r1, r1, #352321536
  60 0022 21F41021 		bic	r1, r1, #589824
  61 0026 1960     		str	r1, [r3]
 211:Core/Src/system_stm32u5xx.c **** 
 212:Core/Src/system_stm32u5xx.c ****   /* Reset PLLCFGR register */
 213:Core/Src/system_stm32u5xx.c ****   RCC->PLL1CFGR = 0U;
  62              		.loc 1 213 3 is_stmt 1 view .LVU13
  63              		.loc 1 213 17 is_stmt 0 view .LVU14
  64 0028 9A62     		str	r2, [r3, #40]
 214:Core/Src/system_stm32u5xx.c **** 
 215:Core/Src/system_stm32u5xx.c ****   /* Reset HSEBYP bit */
 216:Core/Src/system_stm32u5xx.c ****   RCC->CR &= ~(RCC_CR_HSEBYP);
  65              		.loc 1 216 3 is_stmt 1 view .LVU15
  66              		.loc 1 216 11 is_stmt 0 view .LVU16
  67 002a 1968     		ldr	r1, [r3]
  68 002c 21F48021 		bic	r1, r1, #262144
  69 0030 1960     		str	r1, [r3]
 217:Core/Src/system_stm32u5xx.c **** 
ARM GAS  /tmp/cc8Ho2JW.s 			page 6


 218:Core/Src/system_stm32u5xx.c ****   /* Disable all interrupts */
 219:Core/Src/system_stm32u5xx.c ****   RCC->CIER = 0U;
  70              		.loc 1 219 3 is_stmt 1 view .LVU17
  71              		.loc 1 219 13 is_stmt 0 view .LVU18
  72 0032 1A65     		str	r2, [r3, #80]
 220:Core/Src/system_stm32u5xx.c **** 
 221:Core/Src/system_stm32u5xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 222:Core/Src/system_stm32u5xx.c ****   #ifdef VECT_TAB_SRAM
 223:Core/Src/system_stm32u5xx.c ****     SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 224:Core/Src/system_stm32u5xx.c ****   #else
 225:Core/Src/system_stm32u5xx.c ****     SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  73              		.loc 1 225 5 is_stmt 1 view .LVU19
  74              		.loc 1 225 15 is_stmt 0 view .LVU20
  75 0034 4FF00063 		mov	r3, #134217728
  76 0038 8360     		str	r3, [r0, #8]
 226:Core/Src/system_stm32u5xx.c ****   #endif
 227:Core/Src/system_stm32u5xx.c **** }
  77              		.loc 1 227 1 view .LVU21
  78 003a 7047     		bx	lr
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 003c 00ED00E0 		.word	-536810240
  83 0040 000C0246 		.word	1174539264
  84              		.cfi_endproc
  85              	.LFE345:
  87              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  88              		.align	1
  89              		.global	SystemCoreClockUpdate
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	SystemCoreClockUpdate:
  95              	.LFB346:
 228:Core/Src/system_stm32u5xx.c **** 
 229:Core/Src/system_stm32u5xx.c **** /**
 230:Core/Src/system_stm32u5xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 231:Core/Src/system_stm32u5xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 232:Core/Src/system_stm32u5xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 233:Core/Src/system_stm32u5xx.c ****   *         other parameters.
 234:Core/Src/system_stm32u5xx.c ****   *
 235:Core/Src/system_stm32u5xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 236:Core/Src/system_stm32u5xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 237:Core/Src/system_stm32u5xx.c ****   *         based on this variable will be incorrect.
 238:Core/Src/system_stm32u5xx.c ****   *
 239:Core/Src/system_stm32u5xx.c ****   * @note   - The system frequency computed by this function is not the real
 240:Core/Src/system_stm32u5xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 241:Core/Src/system_stm32u5xx.c ****   *           constant and the selected clock source:
 242:Core/Src/system_stm32u5xx.c ****   *
 243:Core/Src/system_stm32u5xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 244:Core/Src/system_stm32u5xx.c ****   *
 245:Core/Src/system_stm32u5xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 246:Core/Src/system_stm32u5xx.c ****   *
 247:Core/Src/system_stm32u5xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 248:Core/Src/system_stm32u5xx.c ****   *
 249:Core/Src/system_stm32u5xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 250:Core/Src/system_stm32u5xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
ARM GAS  /tmp/cc8Ho2JW.s 			page 7


 251:Core/Src/system_stm32u5xx.c ****   *
 252:Core/Src/system_stm32u5xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32u5xx_hal.h file (default value
 253:Core/Src/system_stm32u5xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 254:Core/Src/system_stm32u5xx.c ****   *             in voltage and temperature.
 255:Core/Src/system_stm32u5xx.c ****   *
 256:Core/Src/system_stm32u5xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32u5xx_hal.h file (default value
 257:Core/Src/system_stm32u5xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 258:Core/Src/system_stm32u5xx.c ****   *              in voltage and temperature.
 259:Core/Src/system_stm32u5xx.c ****   *
 260:Core/Src/system_stm32u5xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32u5xx_hal.h file (default value
 261:Core/Src/system_stm32u5xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 262:Core/Src/system_stm32u5xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 263:Core/Src/system_stm32u5xx.c ****   *              have wrong result.
 264:Core/Src/system_stm32u5xx.c ****   *
 265:Core/Src/system_stm32u5xx.c ****   *         - The result of this function could be not correct when using fractional
 266:Core/Src/system_stm32u5xx.c ****   *           value for HSE crystal.
 267:Core/Src/system_stm32u5xx.c ****   *
 268:Core/Src/system_stm32u5xx.c ****   * @param  None
 269:Core/Src/system_stm32u5xx.c ****   * @retval None
 270:Core/Src/system_stm32u5xx.c ****   */
 271:Core/Src/system_stm32u5xx.c **** void SystemCoreClockUpdate(void)
 272:Core/Src/system_stm32u5xx.c **** {
  96              		.loc 1 272 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 10B4     		push	{r4}
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 4, -4
 273:Core/Src/system_stm32u5xx.c ****   uint32_t pllr, pllsource, pllm , tmp, pllfracen, msirange;
 105              		.loc 1 273 3 view .LVU23
 274:Core/Src/system_stm32u5xx.c ****   float_t fracn1, pllvco;
 106              		.loc 1 274 3 view .LVU24
 275:Core/Src/system_stm32u5xx.c **** 
 276:Core/Src/system_stm32u5xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 277:Core/Src/system_stm32u5xx.c ****   if(READ_BIT(RCC->ICSCR1, RCC_ICSCR1_MSIRGSEL) == 0U)
 107              		.loc 1 277 3 view .LVU25
 108              		.loc 1 277 6 is_stmt 0 view .LVU26
 109 0002 494B     		ldr	r3, .L22
 110 0004 9B68     		ldr	r3, [r3, #8]
 111              		.loc 1 277 5 view .LVU27
 112 0006 13F4000F 		tst	r3, #8388608
 113 000a 16D1     		bne	.L5
 278:Core/Src/system_stm32u5xx.c ****   {
 279:Core/Src/system_stm32u5xx.c ****     /* MSISRANGE from RCC_CSR applies */
 280:Core/Src/system_stm32u5xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISSRANGE) >> RCC_CSR_MSISSRANGE_Pos;
 114              		.loc 1 280 5 is_stmt 1 view .LVU28
 115              		.loc 1 280 20 is_stmt 0 view .LVU29
 116 000c 464B     		ldr	r3, .L22
 117 000e D3F8F430 		ldr	r3, [r3, #244]
 118              		.loc 1 280 14 view .LVU30
 119 0012 C3F30333 		ubfx	r3, r3, #12, #4
 120              	.LVL0:
 121              	.L6:
 281:Core/Src/system_stm32u5xx.c ****   }
ARM GAS  /tmp/cc8Ho2JW.s 			page 8


 282:Core/Src/system_stm32u5xx.c ****   else
 283:Core/Src/system_stm32u5xx.c ****   {
 284:Core/Src/system_stm32u5xx.c ****     /* MSIRANGE from RCC_CR applies */
 285:Core/Src/system_stm32u5xx.c ****     msirange = (RCC->ICSCR1 & RCC_ICSCR1_MSISRANGE) >> RCC_ICSCR1_MSISRANGE_Pos;
 286:Core/Src/system_stm32u5xx.c ****   }
 287:Core/Src/system_stm32u5xx.c **** 
 288:Core/Src/system_stm32u5xx.c ****   /*MSI frequency range in HZ*/
 289:Core/Src/system_stm32u5xx.c ****   msirange = MSIRangeTable[msirange];
 122              		.loc 1 289 3 is_stmt 1 view .LVU31
 123              		.loc 1 289 12 is_stmt 0 view .LVU32
 124 0016 454A     		ldr	r2, .L22+4
 125 0018 52F82320 		ldr	r2, [r2, r3, lsl #2]
 126              	.LVL1:
 290:Core/Src/system_stm32u5xx.c **** 
 291:Core/Src/system_stm32u5xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 292:Core/Src/system_stm32u5xx.c ****   switch (RCC->CFGR1 & RCC_CFGR1_SWS)
 127              		.loc 1 292 3 is_stmt 1 view .LVU33
 128              		.loc 1 292 14 is_stmt 0 view .LVU34
 129 001c 424B     		ldr	r3, .L22
 130 001e DB69     		ldr	r3, [r3, #28]
 131              		.loc 1 292 22 view .LVU35
 132 0020 03F00C03 		and	r3, r3, #12
 133              		.loc 1 292 3 view .LVU36
 134 0024 0C2B     		cmp	r3, #12
 135 0026 7CD8     		bhi	.L7
 136 0028 DFE803F0 		tbb	[pc, r3]
 137              	.L9:
 138 002c 0B       		.byte	(.L12-.L9)/2
 139 002d 7B       		.byte	(.L7-.L9)/2
 140 002e 7B       		.byte	(.L7-.L9)/2
 141 002f 7B       		.byte	(.L7-.L9)/2
 142 0030 1A       		.byte	(.L11-.L9)/2
 143 0031 7B       		.byte	(.L7-.L9)/2
 144 0032 7B       		.byte	(.L7-.L9)/2
 145 0033 7B       		.byte	(.L7-.L9)/2
 146 0034 1E       		.byte	(.L10-.L9)/2
 147 0035 7B       		.byte	(.L7-.L9)/2
 148 0036 7B       		.byte	(.L7-.L9)/2
 149 0037 7B       		.byte	(.L7-.L9)/2
 150 0038 22       		.byte	(.L8-.L9)/2
 151              	.LVL2:
 152 0039 00       		.p2align 1
 153              	.L5:
 285:Core/Src/system_stm32u5xx.c ****   }
 154              		.loc 1 285 5 is_stmt 1 view .LVU37
 285:Core/Src/system_stm32u5xx.c ****   }
 155              		.loc 1 285 20 is_stmt 0 view .LVU38
 156 003a 3B4B     		ldr	r3, .L22
 157 003c 9B68     		ldr	r3, [r3, #8]
 285:Core/Src/system_stm32u5xx.c ****   }
 158              		.loc 1 285 53 view .LVU39
 159 003e 1B0F     		lsrs	r3, r3, #28
 160              	.LVL3:
 285:Core/Src/system_stm32u5xx.c ****   }
 161              		.loc 1 285 53 view .LVU40
 162 0040 E9E7     		b	.L6
 163              	.LVL4:
ARM GAS  /tmp/cc8Ho2JW.s 			page 9


 164              	.L12:
 293:Core/Src/system_stm32u5xx.c ****   {
 294:Core/Src/system_stm32u5xx.c ****   case 0x00:  /* MSI used as system clock source */
 295:Core/Src/system_stm32u5xx.c ****     SystemCoreClock = msirange;
 165              		.loc 1 295 5 is_stmt 1 view .LVU41
 166              		.loc 1 295 21 is_stmt 0 view .LVU42
 167 0042 3B4B     		ldr	r3, .L22+8
 168 0044 1A60     		str	r2, [r3]
 296:Core/Src/system_stm32u5xx.c ****     break;
 169              		.loc 1 296 5 is_stmt 1 view .LVU43
 170              	.LVL5:
 171              	.L13:
 297:Core/Src/system_stm32u5xx.c **** 
 298:Core/Src/system_stm32u5xx.c ****   case 0x04:  /* HSI used as system clock source */
 299:Core/Src/system_stm32u5xx.c ****     SystemCoreClock = HSI_VALUE;
 300:Core/Src/system_stm32u5xx.c ****     break;
 301:Core/Src/system_stm32u5xx.c **** 
 302:Core/Src/system_stm32u5xx.c ****   case 0x08:  /* HSE used as system clock source */
 303:Core/Src/system_stm32u5xx.c ****     SystemCoreClock = HSE_VALUE;
 304:Core/Src/system_stm32u5xx.c ****     break;
 305:Core/Src/system_stm32u5xx.c **** 
 306:Core/Src/system_stm32u5xx.c ****   case 0x0C:  /* PLL used as system clock source */
 307:Core/Src/system_stm32u5xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 308:Core/Src/system_stm32u5xx.c ****     SYSCLK = PLL_VCO / PLLR
 309:Core/Src/system_stm32u5xx.c ****     */
 310:Core/Src/system_stm32u5xx.c ****     pllsource = (RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1SRC);
 311:Core/Src/system_stm32u5xx.c ****     pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M)>> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 312:Core/Src/system_stm32u5xx.c ****     pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN)>>RCC_PLL1CFGR_PLL1FRACEN_Pos);
 313:Core/Src/system_stm32u5xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN)>> RCC_PLL1F
 314:Core/Src/system_stm32u5xx.c **** 
 315:Core/Src/system_stm32u5xx.c ****       switch (pllsource)
 316:Core/Src/system_stm32u5xx.c ****       {
 317:Core/Src/system_stm32u5xx.c ****       case 0x00:  /* No clock sent to PLL*/
 318:Core/Src/system_stm32u5xx.c ****         pllvco = (float_t)0U;
 319:Core/Src/system_stm32u5xx.c ****         break;
 320:Core/Src/system_stm32u5xx.c **** 
 321:Core/Src/system_stm32u5xx.c ****       case 0x02:  /* HSI used as PLL clock source */
 322:Core/Src/system_stm32u5xx.c ****         pllvco = ((float_t)HSI_VALUE / (float_t)pllm);
 323:Core/Src/system_stm32u5xx.c ****         break;
 324:Core/Src/system_stm32u5xx.c **** 
 325:Core/Src/system_stm32u5xx.c ****       case 0x03:  /* HSE used as PLL clock source */
 326:Core/Src/system_stm32u5xx.c ****         pllvco = ((float_t)HSE_VALUE / (float_t)pllm);
 327:Core/Src/system_stm32u5xx.c ****         break;
 328:Core/Src/system_stm32u5xx.c **** 
 329:Core/Src/system_stm32u5xx.c ****       default:    /* MSI used as PLL clock source */
 330:Core/Src/system_stm32u5xx.c ****         pllvco = ((float_t)msirange / (float_t)pllm);
 331:Core/Src/system_stm32u5xx.c ****         break;
 332:Core/Src/system_stm32u5xx.c ****       }
 333:Core/Src/system_stm32u5xx.c **** 
 334:Core/Src/system_stm32u5xx.c ****       pllvco = pllvco * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1N) + (fracn1/(float_t
 335:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 336:Core/Src/system_stm32u5xx.c ****       SystemCoreClock = (uint32_t)((uint32_t)pllvco/pllr);
 337:Core/Src/system_stm32u5xx.c ****       break;
 338:Core/Src/system_stm32u5xx.c **** 
 339:Core/Src/system_stm32u5xx.c ****   default:
 340:Core/Src/system_stm32u5xx.c ****     SystemCoreClock = msirange;
 341:Core/Src/system_stm32u5xx.c ****     break;
ARM GAS  /tmp/cc8Ho2JW.s 			page 10


 342:Core/Src/system_stm32u5xx.c ****   }
 343:Core/Src/system_stm32u5xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 344:Core/Src/system_stm32u5xx.c ****   /* Get HCLK prescaler */
 345:Core/Src/system_stm32u5xx.c ****   tmp = AHBPrescTable[((RCC->CFGR2 & RCC_CFGR2_HPRE) >> RCC_CFGR2_HPRE_Pos)];
 172              		.loc 1 345 3 view .LVU44
 173              		.loc 1 345 28 is_stmt 0 view .LVU45
 174 0046 384B     		ldr	r3, .L22
 175 0048 1B6A     		ldr	r3, [r3, #32]
 176              		.loc 1 345 54 view .LVU46
 177 004a 03F00F03 		and	r3, r3, #15
 178              		.loc 1 345 22 view .LVU47
 179 004e 394A     		ldr	r2, .L22+12
 180 0050 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 181              	.LVL6:
 346:Core/Src/system_stm32u5xx.c ****   /* HCLK clock frequency */
 347:Core/Src/system_stm32u5xx.c ****   SystemCoreClock >>= tmp;
 182              		.loc 1 347 3 is_stmt 1 view .LVU48
 183              		.loc 1 347 19 is_stmt 0 view .LVU49
 184 0052 374A     		ldr	r2, .L22+8
 185 0054 1368     		ldr	r3, [r2]
 186 0056 CB40     		lsrs	r3, r3, r1
 187 0058 1360     		str	r3, [r2]
 348:Core/Src/system_stm32u5xx.c **** }
 188              		.loc 1 348 1 view .LVU50
 189 005a 5DF8044B 		ldr	r4, [sp], #4
 190              	.LCFI1:
 191              		.cfi_remember_state
 192              		.cfi_restore 4
 193              		.cfi_def_cfa_offset 0
 194 005e 7047     		bx	lr
 195              	.LVL7:
 196              	.L11:
 197              	.LCFI2:
 198              		.cfi_restore_state
 299:Core/Src/system_stm32u5xx.c ****     break;
 199              		.loc 1 299 5 is_stmt 1 view .LVU51
 299:Core/Src/system_stm32u5xx.c ****     break;
 200              		.loc 1 299 21 is_stmt 0 view .LVU52
 201 0060 334B     		ldr	r3, .L22+8
 202 0062 354A     		ldr	r2, .L22+16
 203              	.LVL8:
 299:Core/Src/system_stm32u5xx.c ****     break;
 204              		.loc 1 299 21 view .LVU53
 205 0064 1A60     		str	r2, [r3]
 300:Core/Src/system_stm32u5xx.c **** 
 206              		.loc 1 300 5 is_stmt 1 view .LVU54
 207 0066 EEE7     		b	.L13
 208              	.LVL9:
 209              	.L10:
 303:Core/Src/system_stm32u5xx.c ****     break;
 210              		.loc 1 303 5 view .LVU55
 303:Core/Src/system_stm32u5xx.c ****     break;
 211              		.loc 1 303 21 is_stmt 0 view .LVU56
 212 0068 314B     		ldr	r3, .L22+8
 213 006a 334A     		ldr	r2, .L22+16
 214              	.LVL10:
 303:Core/Src/system_stm32u5xx.c ****     break;
ARM GAS  /tmp/cc8Ho2JW.s 			page 11


 215              		.loc 1 303 21 view .LVU57
 216 006c 1A60     		str	r2, [r3]
 304:Core/Src/system_stm32u5xx.c **** 
 217              		.loc 1 304 5 is_stmt 1 view .LVU58
 218 006e EAE7     		b	.L13
 219              	.LVL11:
 220              	.L8:
 310:Core/Src/system_stm32u5xx.c ****     pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M)>> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 221              		.loc 1 310 5 view .LVU59
 310:Core/Src/system_stm32u5xx.c ****     pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M)>> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 222              		.loc 1 310 21 is_stmt 0 view .LVU60
 223 0070 2D4C     		ldr	r4, .L22
 224 0072 A06A     		ldr	r0, [r4, #40]
 310:Core/Src/system_stm32u5xx.c ****     pllm = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1M)>> RCC_PLL1CFGR_PLL1M_Pos) + 1U;
 225              		.loc 1 310 15 view .LVU61
 226 0074 00F00300 		and	r0, r0, #3
 227              	.LVL12:
 311:Core/Src/system_stm32u5xx.c ****     pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN)>>RCC_PLL1CFGR_PLL1FRACEN_Pos);
 228              		.loc 1 311 5 is_stmt 1 view .LVU62
 311:Core/Src/system_stm32u5xx.c ****     pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN)>>RCC_PLL1CFGR_PLL1FRACEN_Pos);
 229              		.loc 1 311 17 is_stmt 0 view .LVU63
 230 0078 A36A     		ldr	r3, [r4, #40]
 311:Core/Src/system_stm32u5xx.c ****     pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN)>>RCC_PLL1CFGR_PLL1FRACEN_Pos);
 231              		.loc 1 311 49 view .LVU64
 232 007a C3F30323 		ubfx	r3, r3, #8, #4
 311:Core/Src/system_stm32u5xx.c ****     pllfracen = ((RCC->PLL1CFGR & RCC_PLL1CFGR_PLL1FRACEN)>>RCC_PLL1CFGR_PLL1FRACEN_Pos);
 233              		.loc 1 311 10 view .LVU65
 234 007e 591C     		adds	r1, r3, #1
 235              	.LVL13:
 312:Core/Src/system_stm32u5xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN)>> RCC_PLL1F
 236              		.loc 1 312 5 is_stmt 1 view .LVU66
 312:Core/Src/system_stm32u5xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN)>> RCC_PLL1F
 237              		.loc 1 312 22 is_stmt 0 view .LVU67
 238 0080 A36A     		ldr	r3, [r4, #40]
 312:Core/Src/system_stm32u5xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_PLL1FRACN)>> RCC_PLL1F
 239              		.loc 1 312 15 view .LVU68
 240 0082 C3F3001C 		ubfx	ip, r3, #4, #1
 241              	.LVL14:
 313:Core/Src/system_stm32u5xx.c **** 
 242              		.loc 1 313 5 is_stmt 1 view .LVU69
 313:Core/Src/system_stm32u5xx.c **** 
 243              		.loc 1 313 50 is_stmt 0 view .LVU70
 244 0086 A36B     		ldr	r3, [r4, #56]
 313:Core/Src/system_stm32u5xx.c **** 
 245              		.loc 1 313 88 view .LVU71
 246 0088 C3F3CC03 		ubfx	r3, r3, #3, #13
 313:Core/Src/system_stm32u5xx.c **** 
 247              		.loc 1 313 23 view .LVU72
 248 008c 0CFB03F3 		mul	r3, ip, r3
 249 0090 07EE103A 		vmov	s14, r3	@ int
 313:Core/Src/system_stm32u5xx.c **** 
 250              		.loc 1 313 12 view .LVU73
 251 0094 B8EE477A 		vcvt.f32.u32	s14, s14
 252              	.LVL15:
 315:Core/Src/system_stm32u5xx.c ****       {
 253              		.loc 1 315 7 is_stmt 1 view .LVU74
 254 0098 0228     		cmp	r0, #2
ARM GAS  /tmp/cc8Ho2JW.s 			page 12


 255 009a 0DD0     		beq	.L14
 256 009c 0328     		cmp	r0, #3
 257 009e 14D0     		beq	.L15
 258 00a0 E0B1     		cbz	r0, .L21
 330:Core/Src/system_stm32u5xx.c ****         break;
 259              		.loc 1 330 9 view .LVU75
 330:Core/Src/system_stm32u5xx.c ****         break;
 260              		.loc 1 330 19 is_stmt 0 view .LVU76
 261 00a2 07EE902A 		vmov	s15, r2	@ int
 262 00a6 F8EE677A 		vcvt.f32.u32	s15, s15
 330:Core/Src/system_stm32u5xx.c ****         break;
 263              		.loc 1 330 39 view .LVU77
 264 00aa 06EE901A 		vmov	s13, r1	@ int
 265 00ae F8EE666A 		vcvt.f32.u32	s13, s13
 330:Core/Src/system_stm32u5xx.c ****         break;
 266              		.loc 1 330 16 view .LVU78
 267 00b2 87EEA66A 		vdiv.f32	s12, s15, s13
 268              	.LVL16:
 331:Core/Src/system_stm32u5xx.c ****       }
 269              		.loc 1 331 9 is_stmt 1 view .LVU79
 270 00b6 13E0     		b	.L16
 271              	.LVL17:
 272              	.L14:
 322:Core/Src/system_stm32u5xx.c ****         break;
 273              		.loc 1 322 9 view .LVU80
 322:Core/Src/system_stm32u5xx.c ****         break;
 274              		.loc 1 322 40 is_stmt 0 view .LVU81
 275 00b8 07EE901A 		vmov	s15, r1	@ int
 276 00bc F8EE676A 		vcvt.f32.u32	s13, s15
 322:Core/Src/system_stm32u5xx.c ****         break;
 277              		.loc 1 322 16 view .LVU82
 278 00c0 DFED1E7A 		vldr.32	s15, .L22+20
 279 00c4 87EEA66A 		vdiv.f32	s12, s15, s13
 280              	.LVL18:
 323:Core/Src/system_stm32u5xx.c **** 
 281              		.loc 1 323 9 is_stmt 1 view .LVU83
 282 00c8 0AE0     		b	.L16
 283              	.LVL19:
 284              	.L15:
 326:Core/Src/system_stm32u5xx.c ****         break;
 285              		.loc 1 326 9 view .LVU84
 326:Core/Src/system_stm32u5xx.c ****         break;
 286              		.loc 1 326 40 is_stmt 0 view .LVU85
 287 00ca 07EE901A 		vmov	s15, r1	@ int
 288 00ce F8EE676A 		vcvt.f32.u32	s13, s15
 326:Core/Src/system_stm32u5xx.c ****         break;
 289              		.loc 1 326 16 view .LVU86
 290 00d2 DFED1A7A 		vldr.32	s15, .L22+20
 291 00d6 87EEA66A 		vdiv.f32	s12, s15, s13
 292              	.LVL20:
 327:Core/Src/system_stm32u5xx.c **** 
 293              		.loc 1 327 9 is_stmt 1 view .LVU87
 294 00da 01E0     		b	.L16
 295              	.LVL21:
 296              	.L21:
 327:Core/Src/system_stm32u5xx.c **** 
 297              		.loc 1 327 9 is_stmt 0 view .LVU88
ARM GAS  /tmp/cc8Ho2JW.s 			page 13


 298 00dc 9FED186A 		vldr.32	s12, .L22+24
 299              	.L16:
 300              	.LVL22:
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 301              		.loc 1 334 7 is_stmt 1 view .LVU89
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 302              		.loc 1 334 49 is_stmt 0 view .LVU90
 303 00e0 114A     		ldr	r2, .L22
 304              	.LVL23:
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 305              		.loc 1 334 49 view .LVU91
 306 00e2 536B     		ldr	r3, [r2, #52]
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 307              		.loc 1 334 35 view .LVU92
 308 00e4 C3F30803 		ubfx	r3, r3, #0, #9
 309 00e8 07EE903A 		vmov	s15, r3	@ int
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 310              		.loc 1 334 26 view .LVU93
 311 00ec F8EE677A 		vcvt.f32.u32	s15, s15
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 312              		.loc 1 334 91 view .LVU94
 313 00f0 DFED146A 		vldr.32	s13, .L22+28
 314 00f4 27EE267A 		vmul.f32	s14, s14, s13
 315              	.LVL24:
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 316              		.loc 1 334 82 view .LVU95
 317 00f8 77EE877A 		vadd.f32	s15, s15, s14
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 318              		.loc 1 334 109 view .LVU96
 319 00fc B7EE007A 		vmov.f32	s14, #1.0e+0
 320 0100 77EE877A 		vadd.f32	s15, s15, s14
 334:Core/Src/system_stm32u5xx.c ****       pllr = (((RCC->PLL1DIVR & RCC_PLL1DIVR_PLL1R) >> RCC_PLL1DIVR_PLL1R_Pos) + 1U );
 321              		.loc 1 334 14 view .LVU97
 322 0104 67EE867A 		vmul.f32	s15, s15, s12
 323              	.LVL25:
 335:Core/Src/system_stm32u5xx.c ****       SystemCoreClock = (uint32_t)((uint32_t)pllvco/pllr);
 324              		.loc 1 335 7 is_stmt 1 view .LVU98
 335:Core/Src/system_stm32u5xx.c ****       SystemCoreClock = (uint32_t)((uint32_t)pllvco/pllr);
 325              		.loc 1 335 20 is_stmt 0 view .LVU99
 326 0108 536B     		ldr	r3, [r2, #52]
 335:Core/Src/system_stm32u5xx.c ****       SystemCoreClock = (uint32_t)((uint32_t)pllvco/pllr);
 327              		.loc 1 335 53 view .LVU100
 328 010a C3F30663 		ubfx	r3, r3, #24, #7
 335:Core/Src/system_stm32u5xx.c ****       SystemCoreClock = (uint32_t)((uint32_t)pllvco/pllr);
 329              		.loc 1 335 12 view .LVU101
 330 010e 0133     		adds	r3, r3, #1
 331              	.LVL26:
 336:Core/Src/system_stm32u5xx.c ****       break;
 332              		.loc 1 336 7 is_stmt 1 view .LVU102
 336:Core/Src/system_stm32u5xx.c ****       break;
 333              		.loc 1 336 36 is_stmt 0 view .LVU103
 334 0110 FCEEE77A 		vcvt.u32.f32	s15, s15
 335              	.LVL27:
 336:Core/Src/system_stm32u5xx.c ****       break;
 336              		.loc 1 336 25 view .LVU104
 337 0114 17EE902A 		vmov	r2, s15	@ int
 338 0118 B2FBF3F3 		udiv	r3, r2, r3
ARM GAS  /tmp/cc8Ho2JW.s 			page 14


 339              	.LVL28:
 336:Core/Src/system_stm32u5xx.c ****       break;
 340              		.loc 1 336 23 view .LVU105
 341 011c 044A     		ldr	r2, .L22+8
 342 011e 1360     		str	r3, [r2]
 337:Core/Src/system_stm32u5xx.c **** 
 343              		.loc 1 337 7 is_stmt 1 view .LVU106
 344 0120 91E7     		b	.L13
 345              	.LVL29:
 346              	.L7:
 340:Core/Src/system_stm32u5xx.c ****     break;
 347              		.loc 1 340 5 view .LVU107
 340:Core/Src/system_stm32u5xx.c ****     break;
 348              		.loc 1 340 21 is_stmt 0 view .LVU108
 349 0122 034B     		ldr	r3, .L22+8
 350 0124 1A60     		str	r2, [r3]
 341:Core/Src/system_stm32u5xx.c ****   }
 351              		.loc 1 341 5 is_stmt 1 view .LVU109
 352 0126 8EE7     		b	.L13
 353              	.L23:
 354              		.align	2
 355              	.L22:
 356 0128 000C0246 		.word	1174539264
 357 012c 00000000 		.word	.LANCHOR0
 358 0130 00000000 		.word	.LANCHOR1
 359 0134 00000000 		.word	.LANCHOR2
 360 0138 0024F400 		.word	16000000
 361 013c 0024744B 		.word	1265902592
 362 0140 00000000 		.word	0
 363 0144 00000039 		.word	956301312
 364              		.cfi_endproc
 365              	.LFE346:
 367              		.global	MSIRangeTable
 368              		.global	APBPrescTable
 369              		.global	AHBPrescTable
 370              		.global	SystemCoreClock
 371              		.section	.data.SystemCoreClock,"aw"
 372              		.align	2
 373              		.set	.LANCHOR1,. + 0
 376              	SystemCoreClock:
 377 0000 00093D00 		.word	4000000
 378              		.section	.rodata.AHBPrescTable,"a"
 379              		.align	2
 380              		.set	.LANCHOR2,. + 0
 383              	AHBPrescTable:
 384 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 384      00000000 
 384      01020304 
 384      06
 385 000d 070809   		.ascii	"\007\010\011"
 386              		.section	.rodata.APBPrescTable,"a"
 387              		.align	2
 390              	APBPrescTable:
 391 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 391      01020304 
 392              		.section	.rodata.MSIRangeTable,"a"
 393              		.align	2
ARM GAS  /tmp/cc8Ho2JW.s 			page 15


 394              		.set	.LANCHOR0,. + 0
 397              	MSIRangeTable:
 398 0000 006CDC02 		.word	48000000
 399 0004 00366E01 		.word	24000000
 400 0008 0024F400 		.word	16000000
 401 000c 001BB700 		.word	12000000
 402 0010 00093D00 		.word	4000000
 403 0014 80841E00 		.word	2000000
 404 0018 504B1400 		.word	1330000
 405 001c 40420F00 		.word	1000000
 406 0020 00E02E00 		.word	3072000
 407 0024 00701700 		.word	1536000
 408 0028 00A00F00 		.word	1024000
 409 002c 00B80B00 		.word	768000
 410 0030 801A0600 		.word	400000
 411 0034 400D0300 		.word	200000
 412 0038 88070200 		.word	133000
 413 003c A0860100 		.word	100000
 414              		.text
 415              	.Letext0:
 416              		.file 2 "/home/eddie/arm/arm_tools/arm-none-eabi/include/machine/_default_types.h"
 417              		.file 3 "/home/eddie/arm/arm_tools/arm-none-eabi/include/sys/_stdint.h"
 418              		.file 4 "Drivers/CMSIS/Include/core_cm33.h"
 419              		.file 5 "Drivers/CMSIS/Device/ST/STM32U5xx/Include/system_stm32u5xx.h"
 420              		.file 6 "Drivers/CMSIS/Device/ST/STM32U5xx/Include/stm32u575xx.h"
 421              		.file 7 "/home/eddie/arm/arm_tools/arm-none-eabi/include/math.h"
ARM GAS  /tmp/cc8Ho2JW.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32u5xx.c
     /tmp/cc8Ho2JW.s:21     .text.SystemInit:0000000000000000 $t
     /tmp/cc8Ho2JW.s:27     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cc8Ho2JW.s:82     .text.SystemInit:000000000000003c $d
     /tmp/cc8Ho2JW.s:88     .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cc8Ho2JW.s:94     .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cc8Ho2JW.s:138    .text.SystemCoreClockUpdate:000000000000002c $d
     /tmp/cc8Ho2JW.s:356    .text.SystemCoreClockUpdate:0000000000000128 $d
     /tmp/cc8Ho2JW.s:397    .rodata.MSIRangeTable:0000000000000000 MSIRangeTable
     /tmp/cc8Ho2JW.s:390    .rodata.APBPrescTable:0000000000000000 APBPrescTable
     /tmp/cc8Ho2JW.s:383    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/cc8Ho2JW.s:376    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cc8Ho2JW.s:372    .data.SystemCoreClock:0000000000000000 $d
     /tmp/cc8Ho2JW.s:379    .rodata.AHBPrescTable:0000000000000000 $d
     /tmp/cc8Ho2JW.s:387    .rodata.APBPrescTable:0000000000000000 $d
     /tmp/cc8Ho2JW.s:393    .rodata.MSIRangeTable:0000000000000000 $d
     /tmp/cc8Ho2JW.s:152    .text.SystemCoreClockUpdate:0000000000000039 $d
     /tmp/cc8Ho2JW.s:152    .text.SystemCoreClockUpdate:000000000000003a $t

NO UNDEFINED SYMBOLS
